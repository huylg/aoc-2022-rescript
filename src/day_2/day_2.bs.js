// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Caml_obj = require("rescript/lib/js/caml_obj.js");
var Js_string = require("rescript/lib/js/js_string.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");

var lines = Fs.readFileSync("src/day_2/test.txt", "utf8").split("\n");

var length = lines.length;

var result = [
  [
    [
      "A",
      "X"
    ],
    3
  ],
  [
    [
      "A",
      "Y"
    ],
    6
  ],
  [
    [
      "A",
      "Z"
    ],
    0
  ],
  [
    [
      "B",
      "X"
    ],
    0
  ],
  [
    [
      "B",
      "Y"
    ],
    3
  ],
  [
    [
      "B",
      "Z"
    ],
    6
  ],
  [
    [
      "C",
      "X"
    ],
    6
  ],
  [
    [
      "C",
      "Y"
    ],
    0
  ],
  [
    [
      "C",
      "Z"
    ],
    3
  ]
];

var score = [
  [
    "X",
    1
  ],
  [
    "Y",
    2
  ],
  [
    "Z",
    3
  ]
];

console.log(Belt_Array.reduce(Belt_Array.map(Belt_Array.map(Belt_Array.slice(lines, 0, length - 1 | 0), (function (__x) {
                    return Js_string.split(" ", __x);
                  })), (function (e) {
                return [
                        Belt_Array.getExn(e, 0),
                        Belt_Array.getExn(e, 1)
                      ];
              })), 0, (function (acc, param) {
            var b = param[1];
            var a = param[0];
            return (acc + Belt_Option.mapWithDefault(Belt_Array.getBy(result, (function (param) {
                                return Caml_obj.equal(param[0], [
                                            a,
                                            b
                                          ]);
                              })), 0, (function (param) {
                            return param[1];
                          })) | 0) + Belt_Option.mapWithDefault(Belt_Array.getBy(score, (function (param) {
                              return param[0] === b;
                            })), 0, (function (param) {
                          return param[1];
                        })) | 0;
          })));

exports.lines = lines;
exports.length = length;
exports.result = result;
exports.score = score;
/* lines Not a pure module */
